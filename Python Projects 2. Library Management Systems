# Python-Projects 2: Library Managment System

class Book:
 
    def __init__(self, name, author, comment, state = 0):
        self.name = name
        self.author = author
        self.comment = comment
        self.state = state
 
    def __str__(self):
        status = 'available'
        if self.state == 1:
            status = 'unavailable'
        return 'Name：《%s》 Author：%s Comment：%s\n Status：%s ' % (self.name, self.author, self.comment, status)
 
class BookManager:

    books = []
    def __init__(self):
        book1 = Book('惶然录','费尔南多·佩索阿','一个迷失方向且濒于崩溃的灵魂的自我启示，一首对默默无闻、失败、智慧、困难和沉默的赞美诗。')
        book2 = Book('以箭为翅','简媜','调和空灵文风与禅宗境界，刻画人间之缘起缘灭。像一条柔韧的绳子，情这个字，不知勒痛多少人的心肉。')
        book3 = Book('心是孤独的猎手','卡森·麦卡勒斯','我们渴望倾诉，却从未倾听。女孩、黑人、哑巴、醉鬼、鳏夫的孤独形态各异，却从未退场。',1)
        self.books.append(book1)
        self.books.append(book2)
        self.books.append(book3)
 
    def menu(self):
        print('Welcome to the Stray Books Management System. Every silent book is a stray island. Hope you will meet your island and find the habitat for your soul.\n')
        while True:
            print(' 1. Query all the books \n 2. Add a new book \n 3. Borrow a book \n 4. Return a book \n 5. Exit\n')
            choice = int(input('Please select the service you need:'))
            if choice == 1:
                self.show_all_book()
            elif choice == 2:
                self.add_book()
            elif choice == 3:
                self.lend_book()
            elif choice == 4:
                self.return_book()
            else:
                print('Thanks! Hope you love the book and meet your soul in the life.')
                break
 
    def show_all_book(self):
        print('The info of the book:')
        for book in self.books:
            print(book)
            print('')

    def add_book(self):
        new_name = input('Please input the name of the book：')
        new_author =  input('Please input the name of the author：')
        new_comment = input('Please input your comments：')
        new_book = Book(new_name, new_author, new_comment)
        self.books.append(new_book)
        print('Successful Borrowing！\n')

    def check_book(self,name):
        for book in self.books:
            if book.name == name:
                 return book 
        else:
            return None

    def lend_book(self):
        name = input('Please input the name of the book：')
        res = self.check_book(name)

        if res != None:
            if res.state == 1:
                print('The book has been borrowed already, try earlier next time!')
            else:
                print('Success! Remember to read!')
                res.state = 1
        else:
            print("We don't have this book right now, sorry.")
    
    def return_book(self):
        name = input('Please input the name of the book：')
        res = self.check_book(name)
        if res == None:
            print("Please check the name, we don't have related records")
        else:
            if res.state == 0:
                print('The book is still waiting for friends.')
            else:
                print('Successful Returning！')
                res.state = 0
 
manager = BookManager()
manager.menu()

